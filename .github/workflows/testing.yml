name: Windows - Agent

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    
    steps:
      - name: Enable TS and Configure User
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText $env:ADMIN_PASSWORD -Force)
        env:
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          
      - name: Download Downloads.bat
        run: |
          Invoke-WebRequest -Uri "https://www.dropbox.com/scl/fi/ejtrmoq3e2bmvnydwnauy/Downloads.bat?rlkey=gdk7urh98alkofbc7yj7e8usa&st=nxi8zxwl&dl=1" -OutFile "Downloads.bat"
          cmd /c Downloads.bat
          
      - name: Download and Install Playit Agent
        run: |
          curl -s -L -o C:\Users\runneradmin\Downloads\playit-windows-x86-signed.exe https://github.com/playit-cloud/playit-agent/releases/download/v0.15.13/playit-windows-x86-signed.exe
          
      - name: Wait for Console to Appear
        run: Start-Sleep -Seconds 10

      - name: Monitor Console Window
        run: |
          $process = Start-Process -FilePath "C:\Users\runneradmin\Downloads\playit-windows-x86-signed.exe" -NoNewWindow -PassThru
          $processId = $process.Id
          while ($true) {
              Start-Sleep -Seconds 10
              if (-not (Get-Process -Id $processId -ErrorAction SilentlyContinue)) {
                  Write-Output "Process has exited."
                  break
              } else {
                  Write-Output "Process is still running."
              }
          }

      - name: Capture Console Output
        run: |
          $process = Get-Process -Id $processId -ErrorAction SilentlyContinue
          if ($process) {
              $output = $process | Select-Object -Property *
              $output | Out-File -FilePath "C:\Users\runneradmin\Downloads\console_output.txt"
          } else {
              Write-Output "Process has already exited."
          }

      - name: Display Process Information
        run: Get-Content C:\Users\runneradmin\Downloads\console_output.txt
